GRAPH_EXTRACTION_PROMPT = """<role>
You are an expert in analyzing IT knowledge documents and educational materials, specialized in extracting structured information to build knowledge graphs for generating multiple-choice questions (MCQs) in the IT domain. You have particular expertise in extracting mathematical formulas, equations, and technical details.
</role>

<critical_instruction>
üî• EXTREMELY IMPORTANT: Mathematical formulas, equations, parameters, and algorithms are CRITICAL for educational content. You MUST extract ALL mathematical expressions, formulas, equations, optimization objectives, constraints, and parameters mentioned in the text. Missing mathematical content significantly reduces the educational value of the knowledge graph.

Examples of mathematical content you MUST extract:
- Formulas: "w^T x + b = 0", "||w||¬≤", "‚àëŒæ·µ¢", "œÜ(x)", "K(x·µ¢, x‚±º)"
- Parameters: "C", "Œæ·µ¢", "Œ≥", "œÉ", "Œª", "Œ±", "learning rate"
- Objectives: "minimize ||w||¬≤", "maximize margin", "argmax", "argmin"
- Constraints: "subject to y·µ¢(w^T x·µ¢ + b) ‚â• 1 - Œæ·µ¢", "Œæ·µ¢ ‚â• 0"
- Equations: "f(x) = sign(w^T x + b)", "L = 1/2||w||¬≤ + C‚àëŒæ·µ¢"
</critical_instruction>

<instructions>
From the provided text, extract entities and relationships to build a knowledge graph that serves an IT education MCQ generation system. All extracted content should be outputted in Vietnamese.

**CRITICAL: PAY SPECIAL ATTENTION TO MATHEMATICAL FORMULAS, EQUATIONS, ALGORITHMS, AND TECHNICAL SPECIFICATIONS. These are essential for educational content and must be extracted completely.**

1. Identify important entities belonging to the following types:
   - concept: Kh√°i ni·ªám, l√Ω thuy·∫øt IT (V√≠ d·ª•: "Machine Learning", "Thu·∫≠t to√°n", "C∆° s·ªü d·ªØ li·ªáu", "Support Vector Machine")
   - technology: C√¥ng ngh·ªá, c√¥ng c·ª• (V√≠ d·ª•: "Python", "TensorFlow", "MySQL", "Docker")
   - method: Ph∆∞∆°ng ph√°p, k·ªπ thu·∫≠t (V√≠ d·ª•: "Gradient Descent", "Cross-validation", "Normalization")
   - application: ·ª®ng d·ª•ng, h·ªá th·ªëng (V√≠ d·ª•: "H·ªá th·ªëng g·ª£i √Ω", "Chatbot", "Computer Vision")
   - metric: Th∆∞·ªõc ƒëo, ch·ªâ s·ªë (V√≠ d·ª•: "Accuracy", "Precision", "Recall", "F1-Score")
   - component: Th√†nh ph·∫ßn, module (V√≠ d·ª•: "Neural Network", "Decision Tree", "API", "Hyperplane")
   - process: Quy tr√¨nh, b∆∞·ªõc th·ª±c hi·ªán (V√≠ d·ª•: "Data Preprocessing", "Model Training", "Feature Selection")
   - problem: V·∫•n ƒë·ªÅ, th√°ch th·ª©c (V√≠ d·ª•: "Overfitting", "Data Imbalance", "Curse of Dimensionality")
   - formula: C√¥ng th·ª©c to√°n h·ªçc, ph∆∞∆°ng tr√¨nh (V√≠ d·ª•: "w^T x + b = 0", "||w||¬≤", "Œæ·µ¢", "C", "œÜ(x)")
   - parameter: Tham s·ªë, bi·∫øn s·ªë (V√≠ d·ª•: "learning rate", "regularization parameter C", "slack variables Œæ·µ¢")

2. **MANDATORY EXTRACTION RULES FOR MATHEMATICAL CONTENT:**
   - Extract ALL mathematical formulas, equations, and expressions mentioned in the text
   - Include parameter names, variable symbols, and their mathematical notation
   - Extract optimization objectives (e.g., "minimize ||w||¬≤", "maximize margin")
   - Include constraints and conditions (e.g., "subject to y·µ¢(w^T x·µ¢ + b) ‚â• 1")
   - Extract algorithm steps and mathematical operations
   - Include function definitions and mathematical relationships

3. Identify relationships between entities:
   - uses: S·ª≠ d·ª•ng (C√¥ng ngh·ªá s·ª≠ d·ª•ng ph∆∞∆°ng ph√°p)
   - implements: Tri·ªÉn khai (·ª®ng d·ª•ng tri·ªÉn khai kh√°i ni·ªám)
   - measures: ƒêo l∆∞·ªùng (Th∆∞·ªõc ƒëo ƒë√°nh gi√° ph∆∞∆°ng ph√°p)
   - solves: Gi·∫£i quy·∫øt (Ph∆∞∆°ng ph√°p gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ)
   - contains: Ch·ª©a (H·ªá th·ªëng ch·ª©a th√†nh ph·∫ßn)
   - requires: Y√™u c·∫ßu (Quy tr√¨nh y√™u c·∫ßu c√¥ng ngh·ªá)
   - improves: C·∫£i thi·ªán (K·ªπ thu·∫≠t c·∫£i thi·ªán hi·ªáu su·∫•t)
   - causes: G√¢y ra (Nguy√™n nh√¢n g√¢y ra v·∫•n ƒë·ªÅ)
   - optimizes: T·ªëi ∆∞u h√≥a (Thu·∫≠t to√°n t·ªëi ∆∞u h√≥a h√†m m·ª•c ti√™u)
   - constrains: R√†ng bu·ªôc (ƒêi·ªÅu ki·ªán r√†ng bu·ªôc tham s·ªë)
   - defines: ƒê·ªãnh nghƒ©a (C√¥ng th·ª©c ƒë·ªãnh nghƒ©a kh√°i ni·ªám)
   - calculates: T√≠nh to√°n (Ph∆∞∆°ng ph√°p t√≠nh to√°n gi√° tr·ªã)
   - minimizes: C·ª±c ti·ªÉu h√≥a (Thu·∫≠t to√°n c·ª±c ti·ªÉu h√≥a h√†m s·ªë)
   - maximizes: C·ª±c ƒë·∫°i h√≥a (Ph∆∞∆°ng ph√°p c·ª±c ƒë·∫°i h√≥a metric)
   - controls: Ki·ªÉm so√°t (Tham s·ªë ki·ªÉm so√°t h√†nh vi)
   - balances: C√¢n b·∫±ng (C√¢n b·∫±ng gi·ªØa c√°c y·∫øu t·ªë)
   - transforms: Bi·∫øn ƒë·ªïi (Bi·∫øn ƒë·ªïi d·ªØ li·ªáu/kh√¥ng gian)
   - approximates: X·∫•p x·ªâ (Ph∆∞∆°ng ph√°p x·∫•p x·ªâ gi√° tr·ªã)

4. **ENHANCED DESCRIPTION REQUIREMENTS:**
   - Entity description: MUST start with "[T√™n entity] l√†..." then explain clearly the role, characteristics, mathematical properties (if applicable), and importance in IT knowledge domain
   - For formulas/parameters: Include their mathematical meaning, usage context, and impact on the algorithm/method
   - For relationships: Describe in detail the relationship between 2 entities, including mathematical context and significance of that relationship in IT education
   - Include specific values, ranges, or constraints mentioned in the text

5. **SPECIAL ATTENTION TO MATHEMATICAL CONTENT:**
   - Look for optimization objectives (minimize, maximize)
   - Extract constraint conditions (subject to, where, such that)
   - Identify function definitions and equations
   - Extract parameter ranges and typical values
   - Include algorithm complexity notations (O(n), O(n¬≤), etc.)
   - Capture mathematical operations and transformations
   - Extract probability distributions and statistical measures
   - Include matrix operations and linear algebra expressions
</instructions>

<constraints>
- Only extract information that actually exists in the text
- Entity names must be accurate and consistent (keep original English terms where appropriate, especially for mathematical notation)
- Mathematical formulas and expressions must be preserved EXACTLY as written in the source text
- For mathematical entities: Include complete notation (e.g., "w^T x + b = 0", "Œæ·µ¢ ‚â• 0", "||w||¬≤")
- Relationships must be logical and meaningful for IT education
- Descriptions must be detailed, complete, and have high informational value for MCQ generation
- Type must be lowercase
- All descriptions and explanations must be in Vietnamese
- Focus on extracting knowledge that can be used to generate educational questions
- **PRIORITY: Do not miss any mathematical formulas, algorithms, parameters, or equations mentioned in the text**
</constraints>

<output>
ƒê·ªãnh d·∫°ng k·∫øt qu·∫£ nh∆∞ sau:

[ENTITY]<|>entity_name<|>entity_type<|>detailed_entity_description[/ENTITY]
[RELATIONSHIP]<|>source_entity<|>target_entity<|>relationship_type<|>detailed_relationship_description[/RELATIONSHIP]

V√≠ d·ª• v·ªõi t·∫≠p trung v√†o c√¥ng th·ª©c to√°n:
[ENTITY]<|>Support Vector Machine<|>concept<|>Support Vector Machine l√† m·ªôt thu·∫≠t to√°n ph√¢n lo·∫°i m·∫°nh m·∫Ω t√¨m si√™u ph·∫≥ng t·ªëi ∆∞u ƒë·ªÉ ph√¢n t√°ch c√°c l·ªõp d·ªØ li·ªáu v·ªõi margin t·ªëi ƒëa. SVM s·ª≠ d·ª•ng c√°c support vectors ƒë·ªÉ ƒë·ªãnh nghƒ©a ƒë∆∞·ªùng ph√¢n c√°ch v√† c√≥ th·ªÉ x·ª≠ l√Ω d·ªØ li·ªáu phi tuy·∫øn th√¥ng qua kernel trick.[/ENTITY]
[ENTITY]<|>w^T x + b = 0<|>formula<|>w^T x + b = 0 l√† ph∆∞∆°ng tr√¨nh ƒë·ªãnh nghƒ©a si√™u ph·∫≥ng ph√¢n t√°ch trong Support Vector Machine, trong ƒë√≥ w l√† vector tr·ªçng s·ªë, x l√† vector ƒë·∫∑c tr∆∞ng, v√† b l√† bias term. Ph∆∞∆°ng tr√¨nh n√†y x√°c ƒë·ªãnh ranh gi·ªõi quy·∫øt ƒë·ªãnh gi·ªØa c√°c l·ªõp d·ªØ li·ªáu.[/ENTITY]
[ENTITY]<|>||w||¬≤<|>formula<|>||w||¬≤ l√† chu·∫©n b√¨nh ph∆∞∆°ng c·ªßa vector tr·ªçng s·ªë w, ƒë∆∞·ª£c s·ª≠ d·ª•ng trong h√†m m·ª•c ti√™u c·ªßa SVM ƒë·ªÉ t·ªëi thi·ªÉu h√≥a. Vi·ªác t·ªëi thi·ªÉu h√≥a ||w||¬≤ t∆∞∆°ng ƒë∆∞∆°ng v·ªõi vi·ªác t·ªëi ƒëa h√≥a margin gi·ªØa c√°c l·ªõp d·ªØ li·ªáu.[/ENTITY]
[ENTITY]<|>Œæ·µ¢<|>parameter<|>Œæ·µ¢ (slack variables) l√† c√°c bi·∫øn n·ªõi l·ªèng trong Soft Margin SVM cho ph√©p m·ªôt s·ªë ƒëi·ªÉm d·ªØ li·ªáu vi ph·∫°m margin ho·∫∑c b·ªã ph√¢n lo·∫°i sai. Gi√° tr·ªã Œæ·µ¢ ‚â• 0 ƒëo l∆∞·ªùng m·ª©c ƒë·ªô vi ph·∫°m c·ªßa ƒëi·ªÉm d·ªØ li·ªáu th·ª© i.[/ENTITY]
[ENTITY]<|>C<|>parameter<|>C l√† tham s·ªë regularization trong SVM ƒëi·ªÅu khi·ªÉn s·ª± c√¢n b·∫±ng gi·ªØa vi·ªác t·ªëi ƒëa h√≥a margin v√† t·ªëi thi·ªÉu h√≥a l·ªói ph√¢n lo·∫°i. Gi√° tr·ªã C l·ªõn ∆∞u ti√™n ph√¢n lo·∫°i ch√≠nh x√°c, C nh·ªè ∆∞u ti√™n margin l·ªõn.[/ENTITY]
[RELATIONSHIP]<|>Support Vector Machine<|>w^T x + b = 0<|>uses<|>Support Vector Machine s·ª≠ d·ª•ng ph∆∞∆°ng tr√¨nh w^T x + b = 0 ƒë·ªÉ ƒë·ªãnh nghƒ©a si√™u ph·∫≥ng ph√¢n t√°ch t·ªëi ∆∞u. ƒê√¢y l√† c√¥ng th·ª©c c·ªët l√µi x√°c ƒë·ªãnh ranh gi·ªõi quy·∫øt ƒë·ªãnh trong kh√¥ng gian ƒë·∫∑c tr∆∞ng.[/RELATIONSHIP]
[RELATIONSHIP]<|>||w||¬≤<|>Œæ·µ¢<|>constrains<|>Trong Soft Margin SVM, vi·ªác t·ªëi thi·ªÉu h√≥a ||w||¬≤ b·ªã r√†ng bu·ªôc b·ªüi c√°c slack variables Œæ·µ¢ th√¥ng qua ƒëi·ªÅu ki·ªán y·µ¢(w^T x·µ¢ + b) ‚â• 1 - Œæ·µ¢, cho ph√©p m·ªôt s·ªë ƒëi·ªÉm vi ph·∫°m margin.[/RELATIONSHIP]
[RELATIONSHIP]<|>C<|>Œæ·µ¢<|>controls<|>Tham s·ªë C ki·ªÉm so√°t penalty cho c√°c slack variables Œæ·µ¢ trong h√†m m·ª•c ti√™u: min(1/2||w||¬≤ + C‚àëŒæ·µ¢). Gi√° tr·ªã C cao t·∫°o penalty l·ªõn cho vi·ªác vi ph·∫°m, C th·∫•p cho ph√©p nhi·ªÅu vi ph·∫°m h∆°n.[/RELATIONSHIP]
</output>

The context: {input_text}

Result:"""
